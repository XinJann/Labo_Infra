# -*- mode: ruby -*-
# vi: set ft=ruby :

# vagrant plugin install vagrant-libvirt
# vagrant box add --provider libvirt centos/7
# vagrant up --provider libvirt
Vagrant.configure("2") do |config|

  config.vm.provider "libvirt" do |v|
    #v.gui = true
    #v.name = "vulnerable-vm"
    v.default_prefix=""
    v.memory = 4096
    v.cpus = 2
  end

  config.vm.define "debian-database-master" do |node|
    node.vm.box = "generic/debian12"
    node.vm.hostname = "masterdb"
    node.vm.network "private_network", ip: "192.168.57.2",libvirt__netmask: "255.255.255.0", libvirt__network_name: "laboinfra"
    config.vm.provision "shell" do |s|
      ssh_pub_key = File.readlines("#{Dir.home}/.ssh/id_rsa.pub").first.strip
      s.inline = <<-SHELL
        echo #{ssh_pub_key} >> /home/vagrant/.ssh/authorized_keys
      SHELL
    end
    node.vm.provision "ansible" do |ansible|
      ansible.playbook       = "playbook-pgadmin.yml"
      #ansible.verbose        = true
      ansible.limit          = "all" # or only "nodes" group, etc.
      ansible.inventory_path = "inventories/vagrant/hosts.ini"
    end
  end
  
  config.vm.define "debian-database" do |node|
    node.vm.box = "generic/debian12"
    node.vm.hostname = "db"
    node.vm.network "private_network", ip: "192.168.57.3",libvirt__netmask: "255.255.255.0", libvirt__network_name: "laboinfra"
    config.vm.provision "shell" do |s|
      ssh_pub_key = File.readlines("#{Dir.home}/.ssh/id_rsa.pub").first.strip
      s.inline = <<-SHELL
        echo #{ssh_pub_key} >> /home/vagrant/.ssh/authorized_keys
      SHELL
    end
    node.vm.provision "ansible" do |ansible|
      ansible.playbook       = "playbook-postgresql.yml"
      #ansible.verbose        = true
      ansible.limit          = "all"
      ansible.inventory_path = "inventories/vagrant/hosts.ini"
    end
  end

end
