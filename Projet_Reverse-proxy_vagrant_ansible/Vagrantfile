Vagrant.configure("2") do |config|

  servers = [
    {
      hostname: "Reverse-proxy",
      ip: "192.168.57.2",
    },
    {
      hostname: "Caddy",
      ip: "192.168.57.3",
    },
    {
      hostname: "Phpmyadmin",
      ip: "192.168.57.4",
    },
    {
      hostname: "File-browser",
      ip: "192.168.57.5",
    },
    {
      hostname: "Uptime-kuma-1",
      ip: "192.168.57.6",
    },
    # {
    #   hostname: "Uptime-kuma-2",
    #   ip: "192.168.57.7",
    # },
  ]

  servers.each do |server|
    config.vm.define server[:hostname] do |node|

      config.vm.provider "libvirt" do |v|
        #v.gui = true
        #v.name = "vulnerable-vm"
        v.default_prefix=""
        v.memory = 4096
        v.cpus = 2
      end

      node.vm.box = "generic/debian12"
      node.vm.hostname = server[:hostname]
      #node.vm.network "private_network", ip: "192.168.57.2",libvirt__netmask: "255.255.255.0", libvirt__network_name: "laboinfra"
      node.vm.network "private_network", ip: server[:ip],libvirt__netmask: "255.255.255.0", libvirt__network_name: "laboinfra"
      config.vm.provision "shell" do |s|
        ssh_pub_key = File.readlines("#{Dir.home}/.ssh/id_rsa.pub").first.strip
        s.inline = <<-SHELL
          echo #{ssh_pub_key} >> /home/vagrant/.ssh/authorized_keys
        SHELL
      end
      # if server[:hostname] == "Uptime-kuma-1"
      #   puts "coucou les gens"
      #   node.vm.provision "ansible" do |ansible|
      #     ansible.playbook       = "playbook.yml"
      #     #ansible.verbose        = true
      #     ansible.limit          = "all" # or only "nodes" group, etc.
      #     ansible.inventory_path = "inventories/vagrant/hosts.ini"
      #   end
      # end

      # node.vm.provision "ansible" do |ansible|
      #   ansible.playbook       = "playbook-pgadmin.yml"
      #   #ansible.verbose        = true
      #   ansible.limit          = "all" # or only "nodes" group, etc.
      #   ansible.inventory_path = "inventories/vagrant/hosts.ini"
      # end
    end
    # node.vm.provision "ansible" do |ansible|
    #   ansible.playbook       = "playbook-postgresql.yml"
    #   #ansible.verbose        = true
    #   ansible.limit          = "all"
    #   ansible.inventory_path = "inventories/vagrant/hosts.ini"
    # end
    # config.vm.define "debian-database" do |node|
    #   node.vm.box = "generic/debian12"
    #   node.vm.hostname = "db"
    #   node.vm.network "private_network", ip: "192.168.57.3",libvirt__netmask: "255.255.255.0", libvirt__network_name: "laboinfra"
    #   config.vm.provision "shell" do |s|
    #     ssh_pub_key = File.readlines("#{Dir.home}/.ssh/id_rsa.pub").first.strip
    #     s.inline = <<-SHELL
    #       echo #{ssh_pub_key} >> /home/vagrant/.ssh/authorized_keys
    #     SHELL
    #   end
    # end
  end
end
